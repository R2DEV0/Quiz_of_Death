{"version":3,"sources":["views/EditQuiz.js","views/AddQuiz.js","views/Quiz.js","views/Results.js","views/Main.js","App.js","serviceWorker.js","index.js","skull.gif"],"names":["props","useState","quiz","setQuiz","loaded","setLoaded","dropdownOpen","setOpen","useEffect","axios","get","then","res","data","className","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","style","background","border","textShadow","color","DropdownMenu","DropdownItem","onClick","e","navigate","disabled","textAlign","map","test","i","key","question","id","_id","delete","filter","catch","err","console","log","setQuestion","answer1","setAnswer1","answer2","setAnswer2","answer3","setAnswer3","answer4","setAnswer4","right_answer","setRight_answer","errors","setErrors","answerError","setAnswerError","onSubmit","preventDefault","answers","post","errorResponse","response","errorArr","Object","keys","push","message","type","placeholder","onChange","target","value","marginBottom","error","idx","fontWeight","marginTop","pick","setPick","count","setCount","wrongCount","setWrongCount","theQuiz","length","number","Math","floor","random","undefined","confirmAlert","title","buttons","label","padding","marginRight","minWidth","fontSize","setMessage","width","height","borderRadius","Container","src","Skull","alt","App","bg","path","Quiz","EditQuiz","Results","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.21a6ba2f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport './editQuiz.css';\r\n\r\n\r\nexport default (props) => {\r\n    const [quiz, setQuiz] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [dropdownOpen, setOpen] = useState(false);\r\n    // options dropdown button //\r\n    const toggle = () => setOpen(!dropdownOpen);\r\n    const TakeQuiz = (e) => {navigate('/quiz')};\r\n    const NewQuestion = (e) => {navigate('/add')};\r\n    const home = (e) => {navigate('/')};\r\n\r\n    // shows all questions in database for review //\r\n    useEffect(()=> {\r\n        axios.get('http://localhost:8000/api/quiz')\r\n        .then(res=> {\r\n            setQuiz(res.data);\r\n            setLoaded(true);\r\n        })\r\n    }, [setQuiz]);\r\n\r\n    // delete question button //\r\n    const onClick =(id) => {\r\n        axios.delete(`http://localhost:8000/api/quiz/${id}`)\r\n            .then(res => {\r\n                setQuiz(quiz.filter(quiz => quiz._id !== id));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className='btn-sm col-md-1 offset-md-10'>\r\n                <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                    <DropdownToggle caret style={{background:'darkred', border: '1px solid red', textShadow: '2px 2px 4px red', color:'whitesmoke'}}> Options </DropdownToggle>\r\n                    <DropdownMenu style={{background:'lightgray'}}>\r\n                        <DropdownItem onClick={TakeQuiz}>Take a Quiz</DropdownItem>\r\n                        <DropdownItem disabled>Remove a Question</DropdownItem>\r\n                        <DropdownItem onClick={NewQuestion}>Add a New Question</DropdownItem>\r\n                        <DropdownItem onClick={home}>Welcome Page</DropdownItem>\r\n                    </DropdownMenu>\r\n                </ButtonDropdown>\r\n            </div>\r\n            <div className='list'>\r\n                <h3 style={{color:'whitesmoke', textAlign:'center', textShadow: '2px 2px 4px red'}}>Remove a Question</h3>\r\n                {loaded && quiz.map((test, i) => {return <div key={i} className='questions'>\r\n                    <p>Question: <strong>{test.question}</strong></p>\r\n                    <button className='btn btn-danger btn-sm col-md-1 offset-md-11' style={{background:'darkred', border:'1px solid red', textShadow: '2px 2px 4px red', color:'whitesmoke'}}onClick={(e) => {onClick(test._id)}} >Delete</button>    \r\n                </div>})}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport './AddQuiz.css';\r\n\r\n\r\nexport default (props) => {\r\n    const [question, setQuestion] = useState('');\r\n    const [answer1, setAnswer1] = useState('');\r\n    const [answer2, setAnswer2] = useState('');\r\n    const [answer3, setAnswer3] = useState('');\r\n    const [answer4, setAnswer4] = useState('');\r\n    const [right_answer, setRight_answer] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    const [answerError, setAnswerError] = useState('');\r\n    const [dropdownOpen, setOpen] = useState(false);\r\n    // options dropdown button //\r\n    const toggle = () => setOpen(!dropdownOpen);\r\n    const TakeQuiz = (e) => {navigate('/quiz')};\r\n    const Remove = (e) => {navigate('/edit')};\r\n    const home = (e) => {navigate('/')};\r\n\r\n    // submits new question form & redirects to edit page//\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(answer1 === right_answer || answer2 === right_answer || answer3 === right_answer || answer4 === right_answer){\r\n            const answers = [answer1, answer2, answer3, answer4]\r\n            axios.post('http://localhost:8000/api/quiz', {\r\n                question,\r\n                answers,\r\n                right_answer\r\n            })\r\n            .then(res=> {\r\n                navigate('/edit')\r\n            })\r\n            .catch(err=> {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr=[];\r\n                for(const key of Object.keys(errorResponse)){\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr);\r\n            });\r\n        }\r\n        else{\r\n            setAnswerError('Your correct answer must match 1 of the 4 above')\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <div className='btn-sm col-md-1 offset-md-10'>\r\n                <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                    <DropdownToggle caret style={{background:'darkred', border: '1px solid red', textShadow: '2px 2px 4px red', color:'whitesmoke'}}> Options </DropdownToggle>\r\n                    <DropdownMenu style={{background:'lightgray'}}>\r\n                        <DropdownItem onClick={TakeQuiz}>Take a Quiz</DropdownItem>\r\n                        <DropdownItem onClick={Remove}>Remove a Question</DropdownItem>\r\n                        <DropdownItem disabled>Add a New Question</DropdownItem>\r\n                        <DropdownItem onClick={home}>Welcome Page</DropdownItem>\r\n                    </DropdownMenu>\r\n                </ButtonDropdown>\r\n            </div>\r\n            <div className='maindiv'>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Question: </label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder='Add a new Question'onChange={(e)=> {setQuestion(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Enter 4 Options: </label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder='A' style={{marginBottom: '2px'}} onChange={(e)=> {setAnswer1(e.target.value)}}/>\r\n                        <input type=\"text\" className=\"form-control\" placeholder='B' style={{marginBottom: '2px'}} onChange={(e)=> {setAnswer2(e.target.value)}}/>\r\n                        <input type=\"text\" className=\"form-control\" placeholder='C' style={{marginBottom: '2px'}} onChange={(e)=> {setAnswer3(e.target.value)}}/>\r\n                        <input type=\"text\" className=\"form-control\" placeholder='D' onChange={(e)=> {setAnswer4(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Correct Answer: </label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder='Must match one of the 4 options above' onChange={(e)=> {setRight_answer(e.target.value)}}/>\r\n                    </div>\r\n                    <button className='btn btn-danger' style={{background:'darkred', textShadow: '2px 2px 4px red', color:'whitesmoke'}}>Submit</button>\r\n                </form>\r\n                {errors.map((error, idx)=> {\r\n                    return(\r\n                        <p style={{ color:'red', fontWeight:'bold', marginTop:'15px'}}key={idx}>{error}</p>\r\n                    )\r\n                })}\r\n                {\r\n                    answerError ?\r\n                    <p style={{color:'red', fontWeight: 'bold', marginTop:'15px'}}>{ answerError }</p> :\r\n                    ''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router';\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport './quiz.css';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\n\r\nexport default (props) => {\r\n    const [dropdownOpen, setOpen] = useState(false);\r\n    const [quiz, setQuiz] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [pick, setPick] = useState([]);\r\n    const {count, setCount} = props;\r\n    const {wrongCount, setWrongCount} = props;\r\n\r\n\r\n    // options dropdown button //\r\n    const toggle = () => setOpen(!dropdownOpen);\r\n    const Remove = (e) => {navigate('/edit')};\r\n    const NewQuestion = (e) => {navigate('/add')};\r\n    const home = (e) => {navigate('/')};\r\n\r\n    // Displays random questions when rendered & and resets count//\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/quiz')\r\n            .then(res => {\r\n                let theQuiz = []\r\n                while(theQuiz.length < 5){\r\n                    let number = (Math.floor(Math.random() * (res.data.length-1)));\r\n                    for(let i=0; i<theQuiz.length; i++){\r\n                        if(theQuiz[i] === res.data[number] || theQuiz[i] === undefined){\r\n                            number = (Math.floor(Math.random() * (res.data.length-1)));\r\n                            continue;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                    theQuiz.push(res.data[number])\r\n                }\r\n                setQuiz(theQuiz);\r\n                setCount(0);\r\n                setLoaded(true);\r\n\r\n                confirmAlert({\r\n                    title: 'Confirm Readiness',\r\n                    message: 'Are you sure you want to do this?',\r\n                    buttons: [\r\n                        {label: \"Yes, I'm so READY!\",},\r\n                        {label: \"No, I'm too scared\",\r\n                            onClick: () => navigate('/')\r\n                        }\r\n                    ]\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    },[setCount]);\r\n\r\n    // tracks users answer selections & disables answer once selected //\r\n    const onClick = (target,idx,test) => {\r\n        setPick([...pick, idx]);\r\n        target.disabled='true'\r\n        if(idx === test.right_answer){\r\n            setCount(count+1)\r\n        }\r\n        if(idx !== test.right_answer){\r\n            setWrongCount(wrongCount+1)\r\n        }\r\n    }\r\n    const submit = (e) =>{\r\n        e.preventDefault();\r\n        navigate('/results')\r\n    };\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className='btn-md col-md-1 offset-md-10'>\r\n                <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                    <DropdownToggle caret style={{background:'darkred', border:'1px solid red', textShadow: '2px 2px 4px red', color:'whitesmoke'}}> Options </DropdownToggle>\r\n                    <DropdownMenu style={{background:'lightgray'}}>\r\n                        <DropdownItem disabled>Take a Quiz</DropdownItem>\r\n                        <DropdownItem onClick={Remove}>Remove a Question</DropdownItem>\r\n                        <DropdownItem onClick={NewQuestion}>Add a New Question</DropdownItem>\r\n                        <DropdownItem onClick={home}>Welcome Page</DropdownItem>\r\n                    </DropdownMenu>\r\n                </ButtonDropdown>\r\n            </div>\r\n            {loaded && <div>\r\n                {quiz.map((test, i) => {return <div key={i} className='test'>\r\n                    <p className='question'>{test.question}</p>\r\n                    {test.answers.map((idx, i)=>{return <button key={i} className='btn btn-secondary btn-sm buttons' \r\n                    value={idx} style={{fontWeight:'bold', padding: '5px', marginRight: '5px', marginTop:'5px', color:'whitesmoke', minWidth:'120px'}} onClick={(e)=>{onClick(e.target,idx,test)}}> {idx} </button>})}\r\n                </div> })}\r\n                <button className='btn btn-danger btn-md col-6 offset-3' style={{fontWeight:'bold', fontSize:'18px', border:'1px solid red', padding:'10px', marginTop: '1%', background:'darkred', textShadow: '2px 2px 4px red', color:'whitesmoke'}} onClick={submit}>Submit</button>\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {navigate} from '@reach/router';\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport Confetti from 'react-confetti';\r\nimport './results.css';\r\n\r\n\r\nexport default (props) => {\r\n    const{ count, wrongCount } = props;\r\n    const [dropdownOpen, setOpen] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    // options dropdown button //\r\n    const toggle = () => setOpen(!dropdownOpen);\r\n    const TakeQuiz = (e) => {navigate('/quiz')};\r\n    const Remove = (e) => {navigate('/edit')};\r\n    const NewQuestion = (e) => {navigate('/add')};\r\n    const home = (e) => {navigate('/')};\r\n\r\n    // renders message based on score //\r\n    useEffect(() =>{\r\n        if(count < 3){\r\n            setMessage('Wow, you suck!');\r\n        };\r\n        if(count > 2 && count < 5){\r\n            setMessage('You did ok..');\r\n        };\r\n        if(count === 5){\r\n            setMessage('Great Job!')\r\n        }\r\n    },[count]);\r\n\r\n    return(\r\n        <div>\r\n            <Confetti width='900px' height='900px'/>\r\n            <div className='btn-sm col-md-1 offset-md-10'>\r\n                <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                    <DropdownToggle caret style={{background:'darkred', border:'1px solid red', textShadow: '2px 2px 4px red', color:'whitesmoke'}}> Options </DropdownToggle>\r\n                    <DropdownMenu style={{background:'lightgray'}}>\r\n                        <DropdownItem onClick={TakeQuiz}>Take a Quiz</DropdownItem>\r\n                        <DropdownItem onClick={Remove}>Remove a Question</DropdownItem>\r\n                        <DropdownItem onClick={NewQuestion}>Add a New Question</DropdownItem>\r\n                        <DropdownItem onClick={home}>Welcome Page</DropdownItem>\r\n                    </DropdownMenu>\r\n                </ButtonDropdown>\r\n            </div>\r\n            <div style={{marginTop:'10%', textAlign:'center', background:'white', padding: '15px', borderRadius:'8px'}}> \r\n                <h2 className='score'>You got {count} out of 5 correct!</h2>\r\n                <h3 className='message'>{message}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport {navigate} from '@reach/router';\r\nimport { Container} from 'reactstrap';\r\nimport Skull from '../skull.gif';\r\nimport './Main.css';\r\n\r\n\r\nexport default () => {\r\n\r\n    const onClick = (e) =>{\r\n        e.preventDefault();\r\n        navigate('/quiz')\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <div className='main'>\r\n                <h2 style={{color:'red', textShadow: '2px 2px 4px red'}}>Welcome...</h2>\r\n                <h3 style={{color:'red', textShadow: '2px 2px 4px red'}}>Are you ready for the test of your life?</h3>\r\n                <img src={Skull} alt='skull' className='skull' />\r\n                <div>\r\n                    <button className='btn btn-danger btn-lg button' style={{fontWeight:'bold', background:'darkred', textShadow: '2px 2px 4px red', color:'whitesmoke' }} onClick={onClick}>ENTER IF YOU DARE</button>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import React,{ useState} from 'react';\nimport './App.css';\nimport { Router } from '@reach/router'\nimport EditQuiz from './views/EditQuiz';\nimport AddQuiz from './views/AddQuiz';\nimport Quiz from './views/Quiz';\nimport Results from './views/Results';\nimport ParticlesBg from 'particles-bg';\nimport Main from './views/Main';\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [wrongCount, setWrongCount] = useState(0);\n\n  return (\n      <div>\n        <ParticlesBg type=\"cobweb\" bg={true} />\n        <div className='col-sm-12 col-md-12 offset-md-6 col-lg-12 offset-lg-6'>\n            <h3 className='title'> QUIZ of DEATH </h3>\n            <Router>\n              <Main path='/'/>\n              <Quiz path='/quiz' count={count} setCount={setCount} setWrongCount={setWrongCount} wrongCount={wrongCount}/>\n              <EditQuiz path='/edit'/>\n              <AddQuiz path='/add'/>\n              <Results path='/results' count={count} wrongCount={wrongCount}/>\n            </Router>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/skull.f24fdc32.gif\";"],"sourceRoot":""}